"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _utils = require("./utils");

var _signature = _interopRequireDefault(require("./signature"));

var _jsonschema = require("jsonschema");

var _axios = _interopRequireDefault(require("axios"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var event_schema = require("./request_json/event.json");

var RESERVED_EVENT_NAMES = ["$identify", "$notification_delivered", "$notification_dismiss", "$notification_clicked", "$app_launched", "$user_login", "$user_logout"];

var EventCollector = /*#__PURE__*/function () {
  function EventCollector(config) {
    (0, _classCallCheck2["default"])(this, EventCollector);
    this.config = config;
    this.__url = this.__get_url();
    this.__headers = this.__common_headers();
    this.__supr_props = this.__super_properties();
  }

  (0, _createClass2["default"])(EventCollector, [{
    key: "__get_url",
    value: function __get_url() {
      var url_template = "event/";

      if (this.config.include_signature_param) {
        if (this.config.auth_enabled) {
          url_template = url_template + "?verify=true";
        } else {
          url_template = url_template + "?verify=false";
        }
      }

      return "".concat(this.config.base_url).concat(url_template);
    }
  }, {
    key: "__common_headers",
    value: function __common_headers() {
      return {
        "Content-Type": "application/json; charset=utf-8",
        "User-Agent": this.config.user_agent
      };
    }
  }, {
    key: "__dynamic_headers",
    value: function __dynamic_headers() {
      return {
        Date: new Date().toUTCString()
      };
    }
  }, {
    key: "__super_properties",
    value: function __super_properties() {
      return {
        $ss_sdk_version: this.config.user_agent
      };
    }
  }, {
    key: "__check_event_prefix",
    value: function __check_event_prefix(event_name) {
      if (!RESERVED_EVENT_NAMES.includes(event_name)) {
        if ((0, _utils.has_special_char)(event_name)) {
          throw new _utils.SuprsendError("event_names starting with [$,ss_] are reserved");
        }
      }
    }
  }, {
    key: "__validate_event_name",
    value: function __validate_event_name(event_name) {
      if (!(0, _utils.is_string)(event_name)) {
        throw new _utils.SuprsendError("event_name must be a string");
      }

      event_name = event_name.trim();

      this.__check_event_prefix(event_name);

      return event_name;
    }
  }, {
    key: "validate_track_event_schema",
    value: function validate_track_event_schema(data) {
      if (!data["properties"]) {
        data["properties"] = {};
      }

      var schema = event_schema;
      var v = new _jsonschema.Validator();
      var validated_data = v.validate(data, schema);

      if (validated_data.valid) {
        return data;
      } else {
        var error_obj = validated_data.errors[0];
        var error_msg = "".concat(error_obj.property, " ").concat(error_obj.message);
        throw new _utils.SuprsendError(error_msg);
      }
    }
  }, {
    key: "collect",
    value: function collect(distinct_id, event_name) {
      var properties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      event_name = this.__validate_event_name(event_name);

      if (!(0, _utils.is_object)(properties)) {
        throw new _utils.SuprsendError("properties must be a dictionary");
      }

      properties = _objectSpread(_objectSpread({}, properties), this.__supr_props);
      var event = {
        $insert_id: (0, _utils.uuid)(),
        $time: (0, _utils.epoch_milliseconds)(),
        event: event_name,
        env: this.config.env_key,
        distinct_id: distinct_id,
        properties: properties
      };
      event = this.validate_track_event_schema(event);
      return this.send(event);
    }
  }, {
    key: "send",
    value: function () {
      var _send = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(event) {
        var headers, content_text, signature, response;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                headers = _objectSpread(_objectSpread({}, this.__headers), this.__dynamic_headers());
                content_text = JSON.stringify(event);

                if (this.config.auth_enabled) {
                  signature = (0, _signature["default"])(this.__url, "POST", content_text, headers, this.config.env_secret);
                  headers["Authorization"] = "".concat(this.config.env_key, ":").concat(signature);
                }

                _context.prev = 3;
                _context.next = 6;
                return _axios["default"].post(this.__url, content_text, {
                  headers: headers
                });

              case 6:
                response = _context.sent;
                return _context.abrupt("return", {
                  status_code: response.status,
                  success: true,
                  message: response.statusText
                });

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](3);
                return _context.abrupt("return", {
                  status_code: 400,
                  success: false,
                  message: _context.t0.message
                });

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 10]]);
      }));

      function send(_x) {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }]);
  return EventCollector;
}();

var _default = EventCollector;
exports["default"] = _default;
module.exports = exports.default;