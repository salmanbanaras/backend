///<reference path='./../core.d.ts'/>
declare module 'chargebee' {
  export interface QuotedSubscription {
    
    /**
      * @description A unique and immutable identifier for the subscription. If not provided, it is autogenerated.

      */
    
    id:string;
    
    /**
      * @description Applicable only when &#x60;operation_type&#x60; of the quote is &#x60;create_subscription_for_customer&#x60;. For subscriptions in the &#x60;future&#x60; &#x60;status&#x60;, this is the date/time when the subscription is set to start. The quote can be converted on a date/time after this date. This is called backdating the subscription creation. Backdating is performed when the subscription has already been provisioned but the conversion action has been delayed. Backdating is allowed only when the following prerequisites are met:

* Backdating is enabled for subscription creation operations.
* The current day of the month does not exceed the limit set in Chargebee for backdating such operations. This day is typically the day of the month by which the accounting for the previous month must be closed.
* The date is not more than duration X into the past where X is the billing period of the plan. For example, if the period of the subscription&#x27;s plan is 2 months and today is 14th April, the &#x60;start_date&#x60; cannot be earlier than 14th February.

      */
    
    start_date?:number;
    
    /**
      * @description End of the trial period for the subscription. Presence of this value for &#x27;future&#x27; subscription implies the subscription will go into &#x27;in_trial&#x27; state when it starts.

      */
    
    trial_end?:number;
    
    /**
      * @description * When the subscription is not on a contract term: this value is the number of billing cycles remaining after the current cycle, at the end of which, the subscription cancels.
* When the subscription is on a [contract term](contract_terms): this value is the number of billing cycles remaining in the contract term after the current billing cycle.

      */
    
    remaining_billing_cycles?:number;
    
    /**
      * @description Purchase order number for this subscription.

      */
    
    po_number?:string;
    
    /**
      * @description The decimal representation of the quantity of the plan purchased. Returned for quantity-based plans when [multi-decimal pricing](https://apidocs.chargebee.com/docs/api#handling_currency_units ) is enabled.

      */
    
    plan_quantity_in_decimal?:string;
    
    /**
      * @description The decimal representation of the price or per-unit price of the plan. The value is in major units of the currency. Always returned when [multi-decimal pricing](https://apidocs.chargebee.com/docs/api#handling_currency_units ) is enabled.

      */
    
    plan_unit_price_in_decimal?:string;
    
    /**
      * @description Applicable only when &#x60;operation_type&#x60; of the quote is &#x60;change_subscription&#x60;. When &#x60;change_option&#x60; is set to &#x60;specific_date&#x60;, then this is the date/time at which the subscription change is scheduled to occur. The quote can be converted on a date/time after this date. This is called backdating the subscription change and performed when the subscription change has already been provisioned but the conversion action has been delayed. Backdating is allowed only when the following prerequisites are met:

* Backdating must be enabled for subscription change operations.
* Only the following changes can be backdated:
  * Changes in the recurring items or their prices.
  * Addition of non-recurring items.
* Subscription &#x60;status&#x60; is &#x60;active&#x60;, &#x60;cancelled&#x60;, or &#x60;non_renewing&#x60;.
* The current day of the month does not exceed the limit set in Chargebee for backdating subscription change. This limit is the day of the month by which the accounting for the previous month must be closed.
* The date is on or after &#x60;current_term_start&#x60;.
* The date is on or after the last date/time any of the following changes were made:
  * Changes in the recurring items or their prices.
  * Addition of non-recurring items.
* The date is not more than duration X into the past where X is the billing period of the plan. For example, if the period of the subscription&#x27;s plan is 2 months and today is 14th April, &#x60;changes_scheduled_at&#x60; cannot be earlier than 14th February.

      */
    
    changes_scheduled_at?:number;
    
    /**
      * @description Applicable only when &#x60;operation_type&#x60; of the quote is &#x60;change_subscription&#x60;. When the quote is converted, this attribute determines the date/time as of when the subscription change is to be carried out. \* end_of_term - The change is scheduled to be carried out at the end of the billing cycle of the subscription. \* specific_date - The change is carried out as of &#x60;changes_scheduled_at&#x60;. \* immediately - The change is carried out immediately upon quote conversion.

      */
    
    change_option?:'end_of_term' | 'immediately' | 'specific_date';
    
    /**
      * @description Number of billing cycles the new contract term should run for, on contract renewal. The default value is the same as &#x60;billing_cycles&#x60; or a custom value depending on the [site configuration](https://www.chargebee.com/docs/contract-terms.html#configuring-contract-terms).

      */
    
    contract_term_billing_cycle_on_renewal?:number;
    
    /**
      * @description List of coupons for this subscription

      */
    
    coupons?:QuotedSubscription.Coupon[];
    
    /**
      * @description List of discounts for this quoted subscription.

      */
    
    discounts?:QuotedSubscription.Discount[];
    
    /**
      * @description Details of individual [item prices](/docs/api/item_prices?prod_cat_ver&#x3D;2) that are part of this subscription

      */
    
    subscription_items?:QuotedSubscription.SubscriptionItem[];
    
    /**
      * @description List of item tier.

      */
    
    item_tiers?:QuotedSubscription.ItemTier[];
    
    /**
      * @description The details of the contract term to be created when this quote is invoiced.

      */
    
    quoted_contract_term?:QuotedSubscription.QuotedContractTerm;
  }
  export namespace QuotedSubscription {
    
    
    export interface Coupon {  
      coupon_id?:string;
    }
    export interface Discount {  
      id?:string;
       
      invoice_name?:string;
       
      type?:'fixed_amount' | 'percentage';
       
      percentage?:number;
       
      amount?:number;
       
      currency_code?:string;
       
      duration_type?:'limited_period' | 'one_time' | 'forever';
       
      period?:number;
       
      period_unit?:'week' | 'month' | 'year' | 'day';
       
      included_in_mrr?:boolean;
       
      apply_on?:'specific_item_price' | 'invoice_amount';
       
      item_price_id?:string;
       
      created_at?:number;
       
      apply_till?:number;
       
      applied_count?:number;
       
      coupon_id?:string;
       
      index?:number;
    }
    export interface SubscriptionItem {  
      item_price_id?:string;
       
      item_type?:'charge' | 'addon' | 'plan';
       
      quantity?:number;
       
      quantity_in_decimal?:string;
       
      unit_price?:number;
       
      unit_price_in_decimal?:string;
       
      amount?:number;
       
      amount_in_decimal?:string;
       
      free_quantity?:number;
       
      free_quantity_in_decimal?:string;
       
      trial_end?:number;
       
      billing_cycles?:number;
       
      service_period_days?:number;
       
      charge_on_event?:'subscription_creation' | 'subscription_activation' | 'subscription_trial_start' | 'contract_termination' | 'plan_activation';
       
      charge_once?:boolean;
       
      charge_on_option?:'on_event' | 'immediately';
    }
    export interface ItemTier {  
      item_price_id?:string;
       
      starting_unit?:number;
       
      ending_unit?:number;
       
      price?:number;
       
      starting_unit_in_decimal?:string;
       
      ending_unit_in_decimal?:string;
       
      price_in_decimal?:string;
       
      index?:number;
    }
    export interface QuotedContractTerm {  
         /**
          * @description The start date of the contract term

          */
       
      contract_start?:number;
       
         /**
          * @description The end date of the contract term

          */
       
      contract_end?:number;
       
         /**
          * @description The number of billing cycles of the subscription that the contract term is for.

          */
       
      billing_cycle?:number;
       
         /**
          * @description Action to be taken when the contract term completes. \* renew -
* Contract term completes and a new contract term is started for the number of billing cycles specified in [&#x60;contract_billing_cycle_on_renewal&#x60;](subscriptions#create_subscription_for_customer_contract_term_billing_cycle_on_renewal).
* The &#x60;action_at_term_end&#x60; for the new contract term is set to &#x60;renew&#x60;.
\* renew_once - Used when you want to renew the contract term just once. Does the following:
* Contract term completes and a new contract term is started for the number of billing cycles specified in [&#x60;contract_billing_cycle_on_renewal&#x60;](subscriptions#create_subscription_for_customer_contract_term_billing_cycle_on_renewal).
* The &#x60;action_at_term_end&#x60; for the new contract term is set to &#x60;cancel&#x60;.
\* cancel - Contract term completes and subscription is canceled. \* evergreen - Contract term completes and the subscription renews.


          */
       
      action_at_term_end?:'cancel' | 'renew_once' | 'renew' | 'evergreen';
       
         /**
          * @description The sum of the [totals](invoices#invoice_total) of all the invoices raised as part of the contract term. For &#x60;active&#x60; contract terms, this is a predicted value. The value depends on the [type of currency](./#handling_currency_units). If the subscription was [imported](#import_a_subscription) with the contract term, then this value includes the value passed for &#x60;total_amount_raised&#x60;.

          */
       
      total_contract_value?:number;
       
         /**
          * @description The number of days before [&#x60;contract_end&#x60;](contract_terms#contract_term_contract_end), during which the customer is barred from canceling the contract term. The customer is allowed to cancel the contract term via the Self-Serve Portal only before this period. This allows you to have sufficient time for processing the contract term closure

          */
       
      cancellation_cutoff_period?:number;
    }
  }
}